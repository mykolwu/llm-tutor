[
  {
    "type": "h2",
    "content": "1.4   Designing Functions"
  },
  {
    "type": "p",
    "content": "Functions are an essential ingredient of all programs, large and small, and\nserve as our primary medium to express computational processes in a programming\nlanguage. So far, we have discussed the formal properties of functions and how\nthey are applied. We now turn to the topic of what makes a good function.\nFundamentally, the qualities of good functions all reinforce the idea that\nfunctions are abstractions."
  },
  {
    "type": "p",
    "content": "These guidelines improve the readability of code, reduce the number of errors,\nand often minimize the total amount of code written. Decomposing a complex task\ninto concise functions is a skill that takes experience to master. Fortunately,\nPython provides several features to support your efforts."
  },
  {
    "type": "h3",
    "content": "1.4.1   Documentation"
  },
  {
    "type": "p",
    "content": "A function definition will often include documentation describing the function,\ncalled adocstring, which must be indented along with the function body.\nDocstrings are conventionally triple quoted. The first line describes the job\nof the function in one line. The following lines can describe arguments and\nclarify the behavior of the function:"
  },
  {
    "type": "p",
    "content": "When you callhelpwith the name of a function as an argument, you see its\ndocstring (typeqto quit Python help)."
  },
  {
    "type": "code",
    "content": ">>> help(pressure)\n"
  },
  {
    "type": "p",
    "content": "When writing Python programs, include docstrings for all but the simplest\nfunctions. Remember, code is written only once, but often read many times. The\nPython docs includedocstring guidelinesthat maintain consistency across\ndifferent Python projects."
  },
  {
    "type": "p",
    "content": "Comments. Comments in Python can be attached to the end of a line following\nthe#symbol.  For example, the commentBoltzmann's constantabove\ndescribesk.  These comments don't ever appear in Python'shelp, and\nthey are ignored by the interpreter.  They exist for humans alone."
  },
  {
    "type": "h3",
    "content": "1.4.2   Default Argument Values"
  },
  {
    "type": "p",
    "content": "A consequence of defining general functions is the introduction of additional\narguments. Functions with many arguments can be awkward to call and difficult to\nread."
  },
  {
    "type": "p",
    "content": "In Python, we can provide default values for the arguments of a function. When\ncalling that function, arguments with default values are optional. If they are\nnot provided, then the default value is bound to the formal parameter name\ninstead. For instance, if an application commonly computes pressure for one mole\nof particles, this value can be provided as a default:"
  },
  {
    "type": "p",
    "content": "The=symbol means two different things in this example, depending on the\ncontext in which it is used.    In thedefstatement header,=does not\nperform assignment, but instead indicates a default value to use when thepressurefunction is called. By contrast, the assignment statement tokin the body of the function binds the namekto an approximation of\nBoltzmann's constant."
  },
  {
    "type": "code",
    "content": ">>> pressure(1, 273.15)\n2269.974834\n>>> pressure(1, 273.15, 3 * 6.022e23)\n6809.924502\n"
  },
  {
    "type": "p",
    "content": "Thepressurefunction is defined to take three arguments, but only two are\nprovided in the first call expression above.  In this case, the value fornis taken from thedefstatement default. If a third argument is provided,\nthe default is ignored."
  },
  {
    "type": "p",
    "content": "As a guideline, most data values used in a function's body should be expressed\nas default values to named arguments, so that they are easy to inspect and can\nbe changed by the function caller.  Some values that never change, such as the\nfundamental constantk, can be bound in the function body or in the global\nframe."
  },
  {
    "type": "p",
    "content": "Continue:1.5 Control"
  }
]